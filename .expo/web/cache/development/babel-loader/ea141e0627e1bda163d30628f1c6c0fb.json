{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jose.carvalho\\\\Documents\\\\Dev\\\\Android REACT\\\\rss\\\\src\\\\screens\\\\ShowFeedScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Context as FeedListContext } from \"../context/FeedListContext\";\nimport { Context as FeedContext } from \"../context/FeedContext\";\nimport { useContext, useEffect } from 'react';\nimport rssfeed from \"../api/rssfeed\";\nimport { Feather } from '@expo/vector-icons';\n\nvar ShowFeedScreen = function ShowFeedScreen(_ref) {\n  var navigation = _ref.navigation;\n  var feedListContext = useContext(FeedListContext);\n  var feedID = navigation.getParam('id');\n  var feed = feedListContext.state.find(function (feed) {\n    return feed.urlFeed === feedID;\n  });\n  var fetch = rssfeed(feed.urlFeed);\n\n  var _useContext = useContext(FeedContext),\n      state = _useContext.state,\n      fetchItems = _useContext.fetchItems,\n      deleteItem = _useContext.deleteItem,\n      restoreState = _useContext.restoreState;\n\n  fetchItems(fetch);\n  useEffect(function () {\n    restoreState();\n  }, []);\n\n  var abrirLink = function abrirLink(link) {\n    Linking.openURL(link).catch(function (erro) {\n      return console.error('ERRO: Erro ao abrir o link ', erro);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('Add');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Feather, {\n    name: \"plus\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), React.createElement(FlatList, {\n    data: state,\n    keyExtractor: function keyExtractor(item) {\n      return item.link;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.imagem\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.titulo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, item.titulo), React.createElement(Text, {\n        style: styles.dataPublicacao,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, item.dataPublicacao))), React.createElement(View, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.descricao,\n        numberOfLines: 3,\n        ellipsizeMode: \"tail\",\n        onPress: function onPress() {\n          return abrirLink(item.link);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, item.descricao), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          deleteItem(item.link);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, React.createElement(Feather, {\n        style: styles.icon,\n        name: \"trash\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderTopWidth: 1,\n    borderColor: 'gray',\n    width: '90%'\n  },\n  titulo: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    width: '30%'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 4,\n    margin: 5\n  },\n  descricao: {\n    fontSize: 8\n  },\n  dataPublicacao: {\n    fontSize: 10,\n    fontStyle: 'italic'\n  },\n  icon: {\n    fontSize: 24\n  }\n});\nexport default ShowFeedScreen;","map":{"version":3,"sources":["C:/Users/jose.carvalho/Documents/Dev/Android REACT/rss/src/screens/ShowFeedScreen.js"],"names":["React","FlatList","TouchableOpacity","Context","FeedListContext","FeedContext","useContext","useEffect","rssfeed","Feather","ShowFeedScreen","navigation","feedListContext","feedID","getParam","feed","state","find","urlFeed","fetch","fetchItems","deleteItem","restoreState","abrirLink","link","Linking","openURL","catch","erro","console","error","navigate","item","styles","row","image","uri","imagem","titulo","dataPublicacao","descricao","icon","StyleSheet","create","flexDirection","justifyContent","paddingVertical","paddingHorizontal","borderTopWidth","borderColor","width","fontSize","fontWeight","height","borderRadius","margin","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, Image } from 'react-native';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Context as FeedListContext } from '../context/FeedListContext'\nimport { Context as FeedContext } from '../context/FeedContext'\nimport { useContext, useEffect } from 'react';\nimport rssfeed from '../api/rssfeed';\nimport { Feather } from '@expo/vector-icons';\n\n\nconst ShowFeedScreen = ({ navigation }) => {\n    const feedListContext = useContext(FeedListContext);\n    const feedID = navigation.getParam('id');\n    const feed = feedListContext.state.find((feed) => feed.urlFeed === feedID);\n    const fetch = rssfeed(feed.urlFeed);\n    const { state, fetchItems, deleteItem, restoreState } = useContext(FeedContext);\n    fetchItems(fetch);\n\n    useEffect(() => {\n        restoreState();\n    }, []);\n\n    const abrirLink = (link) => {\n        Linking.openURL(link)\n            .catch(\n                (erro) => console.error('ERRO: Erro ao abrir o link ', erro)\n            );\n    }\n\n    return (\n        <>\n\n            <TouchableOpacity onPress={() => { navigation.navigate('Add') /* redireciono para 'Add' */ }}>\n                <Feather name=\"plus\" size={30} />\n            </TouchableOpacity>\n\n            <FlatList\n                data={state}\n                keyExtractor={(item) => item.link}\n                renderItem={({ item }) => {\n                    \n                    return (\n                        <>\n                            <View style={styles.row}>\n                                <Image style={styles.image} source={{ uri: item.imagem }} />\n                                <View>\n                                <Text style={styles.titulo}>{item.titulo}</Text>\n                                <Text style={styles.dataPublicacao}>{item.dataPublicacao}</Text>\n                                </View>\n                            </View>\n                            <View style={styles.row}>\n                                <Text style={styles.descricao} numberOfLines={3} ellipsizeMode='tail'\n                                    onPress={() => abrirLink(item.link)}>\n                                    {item.descricao}\n                                </Text>\n                                <TouchableOpacity onPress={() => { deleteItem(item.link) }}>\n                                    <Feather style={styles.icon} name=\"trash\" />\n                                </TouchableOpacity>\n\n                            </View>\n                        </>\n                    );\n                }}\n            />\n        </>\n    );\n};\n\n//altere os estilos como desejar para melhorar o layout\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: 20,\n        paddingHorizontal: 10,\n        borderTopWidth: 1,\n        borderColor: 'gray',\n        width: '90%',\n    },\n    titulo: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        width: '30%',\n    },\n    image: {\n        //pode alterar largura e altura como desejar\n        width: 100,\n        height: 100,\n        borderRadius: 4,\n        margin: 5\n    },\n    descricao: {\n        fontSize: 8\n    },\n    dataPublicacao: {\n        fontSize: 10,\n        fontStyle: 'italic'\n    },\n    icon: {\n        fontSize: 24\n    }\n});\n\nexport default ShowFeedScreen;\n"]},"metadata":{},"sourceType":"module"}